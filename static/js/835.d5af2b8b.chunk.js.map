{"version":3,"file":"static/js/835.d5af2b8b.chunk.js","mappings":"wOAEaA,EAAYC,EAAAA,GAAAA,IAAH,+EAMTC,EAAYD,EAAAA,GAAAA,IAAH,qE,mBCDP,SAASE,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAC,GACJN,EAASM,EAAIC,MACbL,GAAW,MAEZM,OAAM,SAAAC,GACLP,GAAW,GACXF,EAAS,SAEZ,CAACH,IAEJ,IAAQa,EACNX,EADMW,YAAaC,EACnBZ,EADmBY,MAAOC,EAC1Bb,EAD0Ba,aAAcC,EACxCd,EADwCc,aAAcC,EACtDf,EADsDe,SAAUC,EAChEhB,EADgEgB,OAGlE,OACE,SAACtB,EAAD,WACe,IAAZQ,GACC,8CAEA,gCACGS,GACC,SAACf,EAAD,CACEqB,IAAG,8CAAyCN,GAC5CO,IAAKN,KAGP,SAAC,IAAD,CAAUO,MAAO,OAEnB,2BACGP,GAASC,IACR,0BACGD,EADH,KACYC,EAAaO,MAAM,EAAG,GADlC,OAIDN,IAAgB,wCAA+B,GAAfA,EAAhB,OAChBC,IACC,iCACE,sCACA,6BAAKA,EAAL,UAGHC,IACC,iCACE,oCACA,uBAAIA,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,mB,mCCpD5C9B,EAAYC,EAAAA,GAAAA,IAAH,wPAST8B,EAAY9B,EAAAA,GAAAA,GAAH,wFAOT+B,GAAc/B,EAAAA,EAAAA,IAAOgC,EAAAA,GAAPhC,CAAH,0OAgBXiC,EAAQjC,EAAAA,GAAAA,GAAH,uDAILkC,GAAWlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,+IAQRoC,GAAYpC,EAAAA,EAAAA,IAAOqC,EAAAA,IAAPrC,CAAH,0FClCP,SAASsC,IAAoB,IAAD,EACjCC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,UAACR,EAAD,CAAUS,IAAY,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUG,aAAV,eAAiBC,OAAQ,IAAvC,WACE,SAACT,EAAD,IADF,cAKA,SAAClC,EAAD,CAAaC,QAASoC,KACtB,UAAC,EAAD,YACE,SAACN,EAAD,uCACA,UAACH,EAAD,YACE,yBACE,SAACC,EAAD,CAAaY,GAAE,kBAAaJ,EAAb,SAAf,qBAEF,yBACE,SAACR,EAAD,CAAaY,GAAE,kBAAaJ,EAAb,YAAf,8BAIN,SAAC,KAAD","sources":["components/SingleMovie/SingleMovie.styled.js","components/SingleMovie/SingleMovie.js","pages/MoviesPage.styled.js","pages/MovieDetailsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  padding: 32px 48px;\n`;\n\nexport const PosterImg = styled.img`\n  max-height: 400px;\n  border-radius: 4px;\n`;\n","import { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { getMovieByID } from 'services/API-service';\nimport { Container, PosterImg } from './SingleMovie.styled';\nimport { ReactComponent as NotFound } from '../../icons/not-found.svg';\n\nexport default function SingleMovie({ movieID }) {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getMovieByID(movieID)\n      .then(res => {\n        setMovie(res.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setLoading(false);\n        setMovie({});\n      });\n  }, [movieID]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <Container>\n      {loading === true ? (\n        <p>Loading ... .. ..</p>\n      ) : (\n        <>\n          {poster_path ? (\n            <PosterImg\n              src={`https://www.themoviedb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          ) : (\n            <NotFound width={280} />\n          )}\n          <div>\n            {title && release_date && (\n              <h1>\n                {title} ({release_date.slice(0, 4)})\n              </h1>\n            )}\n            {vote_average && <p>User score: {vote_average * 10}%</p>}\n            {overview && (\n              <>\n                <h3>Overview</h3>\n                <p> {overview} </p>\n              </>\n            )}\n            {genres && (\n              <>\n                <h3>Genres</h3>\n                <p>{genres.map(genre => genre.name).join(', ')}</p>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </Container>\n  );\n}\n\nSingleMovie.propTypes = {\n  movieID: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  color: #fff;\n  background-color: #073763;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const LinksList = styled.ul`\n  display: flex;\n  padding: 16px;\n  gap: 16px;\n  margin: 0;\n`;\n\nexport const AddInfoLink = styled(NavLink)`\n  color: inherit;\n  text-decoration: none;\n  text-transform: uppercase;\n  transition: color 300ms linear;\n  padding: 16px;\n\n  :hover {\n    color: #3d85c6;\n  }\n\n  &.active {\n    color: #3d85c6;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 10px 16px 8px 16px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  text-transform: uppercase;\n  display: flex;\n  margin: 16px 0 0 48px;\n  color: #3d85c6;\n`;\n\nexport const ArrowIcon = styled(FaArrowLeft)`\n  fill: #3d85c6;\n  margin-right: 8px;\n  display: inline-block;\n`;\n","import { useParams, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nimport SingleMovie from 'components/SingleMovie/SingleMovie';\n\nimport {\n  Container,\n  Title,\n  LinksList,\n  AddInfoLink,\n  BackLink,\n  ArrowIcon,\n} from './MoviesPage.styled';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  return (\n    <>\n      <BackLink to={location?.state?.from || '/'}>\n        <ArrowIcon />\n        Go back\n      </BackLink>\n\n      <SingleMovie movieID={movieId} />\n      <Container>\n        <Title>Additional information:</Title>\n        <LinksList>\n          <li>\n            <AddInfoLink to={`/movies/${movieId}/cast`}>Cast</AddInfoLink>\n          </li>\n          <li>\n            <AddInfoLink to={`/movies/${movieId}/reviews`}>Reviews</AddInfoLink>\n          </li>\n        </LinksList>\n      </Container>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["Container","styled","PosterImg","SingleMovie","movieID","useState","movie","setMovie","loading","setLoading","useEffect","getMovieByID","then","res","data","catch","error","poster_path","title","release_date","vote_average","overview","genres","src","alt","width","slice","map","genre","name","join","LinksList","AddInfoLink","NavLink","Title","BackLink","Link","ArrowIcon","FaArrowLeft","MovieDetailsPage","movieId","useParams","location","useLocation","to","state","from"],"sourceRoot":""}