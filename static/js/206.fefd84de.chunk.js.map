{"version":3,"file":"static/js/206.fefd84de.chunk.js","mappings":"0OAGaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAQD,EAAAA,GAAAA,GAAH,qFAMLE,EAAaF,EAAAA,GAAAA,GAAH,gIAQVG,EAAQH,EAAAA,GAAAA,GAAH,mKAULI,EAAcJ,EAAAA,GAAAA,IAAH,kFAMXK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4F,SCxBP,SAASO,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MACjCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACZ,EAAD,YACE,SAACE,EAAD,UAAQQ,KACR,SAACP,EAAD,UACGM,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,MAAOK,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,SAACZ,EAAD,WACE,UAACE,EAAD,CAAWW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA/C,WACE,yBACGD,EADH,KACYM,EAAaI,MAAM,EAAG,GADlC,OAGCL,GACC,SAACV,EAAD,CACEgB,IAAG,8CAAyCN,GAC5CO,IAAKZ,KAGP,SAAC,IAAD,CAAUa,MAAO,UAXXT,WAqBtBV,EAAMoB,UAAY,CAChBf,OAAQgB,IAAAA,QACNA,IAAAA,MAAgB,CACdX,GAAIW,IAAAA,OAAAA,WACJf,MAAOe,IAAAA,OAAAA,WACPV,YAAaU,IAAAA,OAAAA,WACbT,aAAcS,IAAAA,OAAAA,aACbC,YAELhB,MAAOe,IAAAA,S,2IC7CM,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAvB,GACvBoB,GAAU,OAAIpB,EAAOwB,KAAKC,eAE3B,KAGD,2BACE,SAAC,IAAD,CAAQzB,OAAQA,EAAQC,MAAM,wB,iCCPpC,IAAIyB,EAAuBC,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAelC,EAAUmC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,IACP,OAAOT,EAFTA,EAAKhB,WAAagB,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAe3B,UAAY2B,EAEpBA,I,qBC9CPZ,EAAOC,QAAUL,EAAQ,IAARA,I,8BCNnBI,EAAOC,QAFoB","sources":["components/Movies.js/Movies.styled.js","components/Movies.js/Movies.js","pages/HomePage.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 16px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  padding: 16px;\n  text-align: center;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 32px;\n`;\n\nexport const Movie = styled.li`\n  display: flex;\n  width: 280px;\n  height: 440px;\n  transition: transform 300ms linear;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 280px;\n  height: 400px;\n  border-radius: 4px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n  color: #073763;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { ReactComponent as NotFound } from '../../icons/not-found.svg';\n\nimport {\n  Container,\n  Title,\n  MoviesList,\n  Movie,\n  MoviePoster,\n  MovieLink,\n} from './Movies.styled';\n\nexport default function Movies({ movies, title }) {\n  const location = useLocation();\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <MoviesList>\n        {movies.map(({ id, title, poster_path, release_date }) => (\n          <Movie key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <p>\n                {title} ({release_date.slice(0, 4)})\n              </p>\n              {poster_path ? (\n                <MoviePoster\n                  src={`https://www.themoviedb.org/t/p/w500/${poster_path}`}\n                  alt={title}\n                />\n              ) : (\n                <NotFound width={280} />\n              )}\n            </MovieLink>\n          </Movie>\n        ))}\n      </MoviesList>\n    </Container>\n  );\n}\n\nMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  title: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\n\nimport { getTrendingMovies } from 'services/API-service';\nimport Movies from 'components/Movies.js/Movies';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(movies => {\n      setMovies([...movies.data.results]);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Movies movies={movies} title=\"Trending today:\" />\n    </main>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Container","styled","Title","MoviesList","Movie","MoviePoster","MovieLink","Link","Movies","movies","title","location","useLocation","map","id","poster_path","release_date","to","state","from","slice","src","alt","width","propTypes","PropTypes","isRequired","HomePage","useState","setMovies","useEffect","getTrendingMovies","then","data","results","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}